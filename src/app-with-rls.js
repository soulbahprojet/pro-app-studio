import { supabase } from './integrations/supabase/client';
import { setupDatabase, createProductSafe, getProductsSafe } from './lib/supabase-setup.js';

/**
 * Application 224Solutions avec gestion RLS
 */

// Service produits avec gestion des politiques RLS
export const productServiceRLS = {
    // Lire tous les produits (toujours autoris√©)
    async getAll() {
        try {
            return await getProductsSafe();
        } catch (error) {
            console.error('‚ùå Erreur lecture:', error.message);
            return [];
        }
    },

    // Cr√©er un produit avec gestion RLS
    async create(product) {
        try {
            return await createProductSafe(product);
        } catch (error) {
            console.error('‚ùå Erreur cr√©ation:', error.message);
            throw error;
        }
    },

    // Test de connexion simple
    async testConnection() {
        try {
            const { data, error } = await supabase
                .from('products')
                .select('count')
                .limit(1);

            if (error) throw error;
            console.log('‚úÖ Connexion Supabase r√©ussie');
            return true;
        } catch (error) {
            console.error('‚ùå Erreur connexion:', error.message);
            return false;
        }
    }
};

// Fonction principale de test
async function testAppWithRLS() {
    console.log('üöÄ Test 224Solutions avec RLS activ√©...\n');

    // 1. Test de connexion
    console.log('1Ô∏è‚É£ Test de connexion...');
    const connected = await productServiceRLS.testConnection();
    if (!connected) return;

    // 2. Test de lecture (devrait toujours fonctionner)
    console.log('\n2Ô∏è‚É£ Test de lecture des produits...');
    const products = await productServiceRLS.getAll();
    console.log(`üì¶ ${products.length} produits trouv√©s:`, products);

    // 3. Test de cr√©ation (peut √©chouer si RLS mal configur√©)
    console.log('\n3Ô∏è‚É£ Test de cr√©ation de produit...');
    try {
        const newProduct = await productServiceRLS.create({
            name: 'Produit Test 224Solutions',
            price: 29.99,
            description: 'Test avec politiques RLS activ√©es'
        });
        console.log('‚úÖ Produit cr√©√© avec succ√®s:', newProduct);
    } catch (error) {
        console.log('‚ö†Ô∏è Cr√©ation √©chou√©e (normal si RLS non configur√©)');
        console.log('üìã Appliquez les politiques du fichier supabase-policies.sql');
    }

    // 4. Configuration automatique si possible
    console.log('\n4Ô∏è‚É£ Test de configuration...');
    const configured = await setupDatabase();
    if (configured) {
        console.log('‚úÖ Base de donn√©es configur√©e');
    }

    console.log('\nüéâ Test termin√© !');
    console.log('\nüìù Prochaines √©tapes:');
    console.log('1. Connectez-vous √† votre dashboard Supabase');
    console.log('2. Allez dans SQL Editor');
    console.log('3. Ex√©cutez le contenu du fichier supabase-policies.sql');
    console.log('4. Relancez ce test avec: npm run test:rls');
}

// Ex√©cuter le test
testAppWithRLS();
